<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <insightSettings>
    <baseSettings>
      <configChange enabled="true" />
      <enable state="all" />
      <propagateException enabled="false" />
      <global category="ReflectInsight" />
      <exceptionEventTracker time="20" />
      <debugMessageProcess enabled="true" />
    </baseSettings>

    <listenerGroups active="Demo">
      <group name="Demo" enabled="true" maskIdentities="false">
        <destinations>
          <destination name="Viewer" enabled="true" filter="" details="Viewer" />
        </destinations>
      </group>
    </listenerGroups>

    <logManager>
      <instance name="WebApi" category="WebApi" xbkColor="LightLavender" />
      <instance name="Business" category="Business" xbkColor="LightOrange" />
      <instance name="DataAccess" category="DataAccess" xbkColor="LightGreen" />
      <instance name="Fields" />
    </logManager>

    <!--
		tracer properties = "None|MethodName|Parameters|HashedParameters|IgnoreExceptions" - default: MethodName
    
    None - will get nothing
    MethodName - will only show method name without parameters ( default )
    Parameters - will show method name and parameters but only for primitve types
    HashedParameters - will show method name but hash all parameter values
    IgnoreExceptions - will ignore logging exceptions between enter/exit block    
		-->

    <extensions>
      <extension name="tracer.fields" instance="Fields" />
      <extension name="tracer.webApi" instance="WebApi" properties="MethodName" />
      <extension name="tracer.business" instance="Business" properties="Parameters" />
      <extension name="tracer.dataAccess" instance="DataAccess" properties="HashedParameters" />
    </extensions>

    <exceptionManagement mode="on">
      <publisher mode="on" name="LogTextEventPublisher" type="RI.Utils.ExceptionManagement.ExceptionLogTextFilePublisher, ReflectSoftware.Insight" filePath="$(workingdir)\Logs\ri_exceptions.txt" recycle="7" />
      <publisher mode="off" name="EventPublisher" type="RI.Utils.ExceptionManagement.ExceptionEventPublisher, ReflectSoftware.Insight" applicationName="ReflectInsight" />
    </exceptionManagement>

  </insightSettings>
</configuration>